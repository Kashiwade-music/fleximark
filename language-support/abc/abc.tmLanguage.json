{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "ABC Notation",
  "patterns": [
    {
      "include": "#infofield_not_inline"
    },
    {
      "include": "#infofield_inline"
    },
    {
      "include": "#instructions"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#inline_comments"
    },
    {
      "include": "#voice-section"
    },
    {
      "include": "#inline_header"
    },
    {
      "include": "#chords"
    },
    {
      "include": "#words"
    },
    {
      "include": "#bar"
    },
    {
      "include": "#ornaments"
    }
  ],
  "repository": {
    "infofield_not_inline": {
      "patterns": [
        {
          "match": "^([ABCDFGHIKLMmNOPQRrSTUVWwXZ]:.*)",
          "captures": {
            "1": {
              "patterns": [
                {
                  "include": "#infofield_area"
                },
                {
                  "include": "#infofield_b_to_h_o_s_t_WwZ"
                },
                {
                  "include": "#infofield_instruction"
                },
                {
                  "include": "#infofield_key"
                },
                {
                  "include": "#infofield_unit_note_length"
                },
                {
                  "include": "#infofield_meter"
                },
                {
                  "include": "#infofield_macro"
                },
                {
                  "include": "#infofield_notes"
                },
                {
                  "include": "#infofield_part"
                },
                {
                  "include": "#infofield_tempo"
                },
                {
                  "include": "#infofield_rhythm"
                },
                {
                  "include": "#infofield_inline_comment"
                },
                {
                  "include": "#infofield_user_defined"
                },
                {
                  "include": "#infofield_voice"
                },
                {
                  "include": "#infofield_reference_number"
                }
              ]
            }
          }
        }
      ]
    },
    "infofield_inline": {
      "patterns": [
        {
          "patterns": [
            {
              "match": "(\\[)(.*?)(\\])",
              "captures": {
                "1": {
                  "name": "meta"
                },
                "2": {
                  "patterns": [
                    {
                      "include": "#infofield_instruction"
                    },
                    {
                      "include": "#infofield_key"
                    },
                    {
                      "include": "#infofield_unit_note_length"
                    },
                    {
                      "include": "#infofield_meter"
                    },
                    {
                      "include": "#infofield_macro"
                    },
                    {
                      "include": "#infofield_notes"
                    },
                    {
                      "include": "#infofield_part"
                    },
                    {
                      "include": "#infofield_tempo"
                    },
                    {
                      "include": "#infofield_rhythm"
                    },
                    {
                      "include": "#infofield_inline_comment"
                    },
                    {
                      "include": "#infofield_user_defined"
                    },
                    {
                      "include": "#infofield_voice"
                    },
                    {
                      "include": "#infofield_reference_number"
                    }
                  ]
                },
                "3": {
                  "name": "meta"
                }
              }
            }
          ]
        }
      ]
    },
    "infofield_area": {
      "patterns": [
        {
          "match": "([A]:)(.*)",
          "captures": {
            "1": {
              "name": "keyword invalid.deprecated"
            },
            "2": {
              "name": "string invalid.deprecated"
            }
          }
        }
      ]
    },
    "infofield_b_to_h_o_s_t_WwZ": {
      "patterns": [
        {
          "match": "([BCDFGHOSTWwZ]:)(.*)",
          "captures": {
            "1": {
              "name": "keyword"
            },
            "2": {
              "name": "string"
            }
          }
        }
      ]
    },
    "infofield_instruction": {
      "patterns": [
        {
          "match": "I:([a-zA-Z0-9\\-]+)\\s+([^\\r\\n\\[\\]]+)",
          "captures": {
            "1": {
              "name": "keyword"
            },
            "2": {
              "name": "variable"
            }
          }
        }
      ]
    },
    "infofield_key": {
      "begin": "(K:)(\\S+)?",
      "beginCaptures": {
        "1": {
          "name": "keyword"
        },
        "2": {
          "name": "constant.numeric"
        }
      },
      "end": "(?=$)",
      "name": "meta.voice-section",
      "patterns": [
        {
          "begin": "\\s+(clef|score|sound|shift|instrument|stafflines|octave)(=)",
          "beginCaptures": {
            "1": {
              "name": "variable.parameter.attribute"
            },
            "2": {
              "name": "keyword.operator.assignment"
            }
          },
          "end": "(?=\\s|$)",
          "patterns": [
            {
              "match": "\"[^\"]*\"|”[^”]*”|[^\\s]+",
              "name": "string.quoted.attribute-value"
            }
          ]
        }
      ]
    },
    "infofield_unit_note_length": {
      "patterns": [
        {
          "match": "([L]:)(.*)",
          "captures": {
            "1": {
              "name": "keyword"
            },
            "2": {
              "name": "constant.numeric"
            }
          }
        }
      ]
    },
    "infofield_meter": {
      "patterns": [
        {
          "match": "([M]:)(.*)",
          "captures": {
            "1": {
              "name": "keyword"
            },
            "2": {
              "name": "constant.numeric"
            }
          }
        }
      ]
    },
    "infofield_macro": {
      "patterns": [
        {
          "match": "([m]:)(.*)",
          "captures": {
            "1": {
              "name": "entity.name.function"
            },
            "2": {
              "name": "constant.numeric"
            }
          }
        }
      ]
    },
    "infofield_notes": {
      "patterns": [
        {
          "match": "([N]:)(.*)",
          "captures": {
            "1": {
              "name": "keyword"
            },
            "2": {
              "name": "string"
            }
          }
        }
      ]
    },
    "infofield_part": {
      "patterns": [
        {
          "match": "([P]:)(.*)",
          "captures": {
            "1": {
              "name": "keyword.control"
            },
            "2": {
              "name": "variable"
            }
          }
        }
      ]
    },
    "infofield_tempo": {
      "patterns": [
        {
          "match": "([Q]:)(.*)",
          "captures": {
            "1": {
              "name": "keyword"
            },
            "2": {
              "name": "constant.numeric"
            }
          }
        }
      ]
    },
    "infofield_rhythm": {
      "patterns": [
        {
          "match": "([R]:)(.*)",
          "captures": {
            "1": {
              "name": "keyword"
            },
            "2": {
              "name": "string"
            }
          }
        }
      ]
    },
    "infofield_inline_comment": {
      "patterns": [
        {
          "match": "([r]:)(.*)",
          "captures": {
            "1": {
              "name": "keyword"
            },
            "2": {
              "name": "comment.content"
            }
          }
        }
      ]
    },
    "infofield_user_defined": {
      "patterns": [
        {
          "match": "([U]:)(.*)",
          "captures": {
            "1": {
              "name": "entity.name.function"
            },
            "2": {
              "name": "constant.numeric"
            }
          }
        }
      ]
    },
    "infofield_voice": {
      "begin": "(V:)(\\S+)?",
      "beginCaptures": {
        "1": {
          "name": "keyword.control"
        },
        "2": {
          "name": "variable.parameter.voice-id"
        }
      },
      "end": "(?=$)",
      "name": "meta.voice-section",
      "patterns": [
        {
          "begin": "\\s+(clef|name|nm|snm|subname|stem|octave)(=)",
          "beginCaptures": {
            "1": {
              "name": "variable.parameter.attribute"
            },
            "2": {
              "name": "keyword.operator.assignment"
            }
          },
          "end": "(?=\\s|$)",
          "patterns": [
            {
              "match": "\"[^\"]*\"|”[^”]*”|[^\\s]+",
              "name": "string.quoted.attribute-value"
            }
          ]
        }
      ]
    },
    "infofield_reference_number": {
      "patterns": [
        {
          "match": "^([X]:)(.*)",
          "captures": {
            "1": {
              "name": "keyword"
            },
            "2": {
              "name": "constant.numeric"
            }
          }
        }
      ]
    },
    "instructions": {
      "patterns": [
        {
          "match": "^%%.*",
          "name": "entity.name.function"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "match": "^%(?!%).*",
          "name": "comment"
        }
      ]
    },
    "chords": {
      "patterns": [
        {
          "match": "\"([^\".]*)\"",
          "name": "keyword.other.chords.abc"
        }
      ]
    },
    "words": {
      "patterns": [
        {
          "match": "^(w:)(.*)",
          "name": "keyword.other.words.abc"
        }
      ]
    },
    "bar": {
      "patterns": [
        {
          "match": ":?\\|[:\\]]?",
          "name": "keyword.other.bar.abc"
        }
      ]
    },
    "ornaments": {
      "patterns": [
        {
          "match": "\\!([^\\!.]*)\\!",
          "name": "keyword.other.ornaments.abc"
        }
      ]
    }
  },
  "scopeName": "source.abc"
}